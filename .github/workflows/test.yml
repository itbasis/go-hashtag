name: Build
on:
  - push
  - pull_request

permissions:
  contents: read

jobs:
  mod:
    runs-on: ubuntu-latest
    name: Check modules
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19.8'
      - uses: actions/checkout@v3
      - run: go mod tidy && git diff --exit-code go.mod go.sum

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version:
          - "1.19.8"
          - "1.20.3"
    #noinspection UndefinedVariable
    name: Go ${{ matrix.go_version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          cache: true
          #noinspection UndefinedVariable
          go-version: ${{ matrix.go_version }}

      - run: go get -u golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest && go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest
      - run: go vet -vettool=$(which shadow) ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - run: go get github.com/onsi/ginkgo/v2@latest && go install github.com/onsi/ginkgo/v2/ginkgo
      - run: $(go env GOPATH)/bin/ginkgo --junit-report=report-ginkgo.xml ./...

      - run: go get -u gotest.tools/gotestsum@latest && go install gotest.tools/gotestsum@latest
      - run: $(go env GOPATH)/bin/gotestsum --junitfile report-testify.xml --format testname ./...

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "report-*.xml"
        if: always()
